# coding: utf-8

"""
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

Contact: api@xero.com
Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401

from xero_python.models import BaseModel


class ReportRow(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {"row_type": "RowType", "title": "str", "cells": "list[ReportCell]"}

    attribute_map = {"row_type": "RowType", "title": "Title", "cells": "Cells"}

    def __init__(self, row_type=None, title=None, cells=None):  # noqa: E501
        """ReportRow - a model defined in OpenAPI"""  # noqa: E501

        self._row_type = None
        self._title = None
        self._cells = None
        self.discriminator = None

        if row_type is not None:
            self.row_type = row_type
        if title is not None:
            self.title = title
        if cells is not None:
            self.cells = cells

    @property
    def row_type(self):
        """Gets the row_type of this ReportRow.  # noqa: E501


        :return: The row_type of this ReportRow.  # noqa: E501
        :rtype: RowType
        """
        return self._row_type

    @row_type.setter
    def row_type(self, row_type):
        """Sets the row_type of this ReportRow.


        :param row_type: The row_type of this ReportRow.  # noqa: E501
        :type: RowType
        """

        self._row_type = row_type

    @property
    def title(self):
        """Gets the title of this ReportRow.  # noqa: E501


        :return: The title of this ReportRow.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ReportRow.


        :param title: The title of this ReportRow.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def cells(self):
        """Gets the cells of this ReportRow.  # noqa: E501


        :return: The cells of this ReportRow.  # noqa: E501
        :rtype: list[ReportCell]
        """
        return self._cells

    @cells.setter
    def cells(self, cells):
        """Sets the cells of this ReportRow.


        :param cells: The cells of this ReportRow.  # noqa: E501
        :type: list[ReportCell]
        """

        self._cells = cells
