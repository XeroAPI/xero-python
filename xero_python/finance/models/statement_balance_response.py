# coding: utf-8

"""
    Xero Finance API

    The Finance API is a collection of endpoints which customers can use in the course of a loan application, which may assist lenders to gain the confidence they need to provide capital.  # noqa: E501

    Contact: api@xero.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401

from xero_python.models import BaseModel


class StatementBalanceResponse(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {"value": "float", "type": "str"}

    attribute_map = {"value": "value", "type": "type"}

    def __init__(self, value=None, type=None):  # noqa: E501
        """StatementBalanceResponse - a model defined in OpenAPI"""  # noqa: E501

        self._value = None
        self._type = None
        self.discriminator = None

        if value is not None:
            self.value = value
        if type is not None:
            self.type = type

    @property
    def value(self):
        """Gets the value of this StatementBalanceResponse.  # noqa: E501

        Total closing balance of the account. This includes both reconciled and unreconciled bank statement lines. The closing balance will always be represented as a positive number, with it’s debit/credit status defined in the statementBalanceDebitCredit field.  # noqa: E501

        :return: The value of this StatementBalanceResponse.  # noqa: E501
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this StatementBalanceResponse.

        Total closing balance of the account. This includes both reconciled and unreconciled bank statement lines. The closing balance will always be represented as a positive number, with it’s debit/credit status defined in the statementBalanceDebitCredit field.  # noqa: E501

        :param value: The value of this StatementBalanceResponse.  # noqa: E501
        :type: float
        """

        self._value = value

    @property
    def type(self):
        """Gets the type of this StatementBalanceResponse.  # noqa: E501

        The DEBIT or CREDIT status of the account. Cash accounts in credit have a negative balance.  # noqa: E501

        :return: The type of this StatementBalanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StatementBalanceResponse.

        The DEBIT or CREDIT status of the account. Cash accounts in credit have a negative balance.  # noqa: E501

        :param type: The type of this StatementBalanceResponse.  # noqa: E501
        :type: str
        """

        self._type = type
