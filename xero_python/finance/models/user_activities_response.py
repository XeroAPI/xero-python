# coding: utf-8

"""
    Xero Finance API

    The Finance API is a collection of endpoints which customers can use in the course of a loan application, which may assist lenders to gain the confidence they need to provide capital.  # noqa: E501

    Contact: api@xero.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401

from xero_python.models import BaseModel


class UserActivitiesResponse(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        "organisation_id": "str",
        "data_month": "str",
        "users": "list[UserResponse]",
    }

    attribute_map = {
        "organisation_id": "organisationId",
        "data_month": "dataMonth",
        "users": "users",
    }

    def __init__(self, organisation_id=None, data_month=None, users=None):  # noqa: E501
        """UserActivitiesResponse - a model defined in OpenAPI"""  # noqa: E501

        self._organisation_id = None
        self._data_month = None
        self._users = None
        self.discriminator = None

        if organisation_id is not None:
            self.organisation_id = organisation_id
        if data_month is not None:
            self.data_month = data_month
        if users is not None:
            self.users = users

    @property
    def organisation_id(self):
        """Gets the organisation_id of this UserActivitiesResponse.  # noqa: E501

        The requested Organisation to which the data pertains  # noqa: E501

        :return: The organisation_id of this UserActivitiesResponse.  # noqa: E501
        :rtype: str
        """
        return self._organisation_id

    @organisation_id.setter
    def organisation_id(self, organisation_id):
        """Sets the organisation_id of this UserActivitiesResponse.

        The requested Organisation to which the data pertains  # noqa: E501

        :param organisation_id: The organisation_id of this UserActivitiesResponse.  # noqa: E501
        :type: str
        """

        self._organisation_id = organisation_id

    @property
    def data_month(self):
        """Gets the data_month of this UserActivitiesResponse.  # noqa: E501

        The month of the report  # noqa: E501

        :return: The data_month of this UserActivitiesResponse.  # noqa: E501
        :rtype: str
        """
        return self._data_month

    @data_month.setter
    def data_month(self, data_month):
        """Sets the data_month of this UserActivitiesResponse.

        The month of the report  # noqa: E501

        :param data_month: The data_month of this UserActivitiesResponse.  # noqa: E501
        :type: str
        """

        self._data_month = data_month

    @property
    def users(self):
        """Gets the users of this UserActivitiesResponse.  # noqa: E501


        :return: The users of this UserActivitiesResponse.  # noqa: E501
        :rtype: list[UserResponse]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this UserActivitiesResponse.


        :param users: The users of this UserActivitiesResponse.  # noqa: E501
        :type: list[UserResponse]
        """

        self._users = users
