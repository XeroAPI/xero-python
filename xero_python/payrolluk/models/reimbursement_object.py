# coding: utf-8

"""
Xero Payroll UK

This is the Xero Payroll API for orgs in the UK region.  # noqa: E501

Contact: api@xero.com
Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401

from xero_python.models import BaseModel


class ReimbursementObject(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        "pagination": "Pagination",
        "problem": "Problem",
        "reimbursement": "Reimbursement",
    }

    attribute_map = {
        "pagination": "pagination",
        "problem": "problem",
        "reimbursement": "reimbursement",
    }

    def __init__(self, pagination=None, problem=None, reimbursement=None):  # noqa: E501
        """ReimbursementObject - a model defined in OpenAPI"""  # noqa: E501

        self._pagination = None
        self._problem = None
        self._reimbursement = None
        self.discriminator = None

        if pagination is not None:
            self.pagination = pagination
        if problem is not None:
            self.problem = problem
        if reimbursement is not None:
            self.reimbursement = reimbursement

    @property
    def pagination(self):
        """Gets the pagination of this ReimbursementObject.  # noqa: E501


        :return: The pagination of this ReimbursementObject.  # noqa: E501
        :rtype: Pagination
        """
        return self._pagination

    @pagination.setter
    def pagination(self, pagination):
        """Sets the pagination of this ReimbursementObject.


        :param pagination: The pagination of this ReimbursementObject.  # noqa: E501
        :type: Pagination
        """

        self._pagination = pagination

    @property
    def problem(self):
        """Gets the problem of this ReimbursementObject.  # noqa: E501


        :return: The problem of this ReimbursementObject.  # noqa: E501
        :rtype: Problem
        """
        return self._problem

    @problem.setter
    def problem(self, problem):
        """Sets the problem of this ReimbursementObject.


        :param problem: The problem of this ReimbursementObject.  # noqa: E501
        :type: Problem
        """

        self._problem = problem

    @property
    def reimbursement(self):
        """Gets the reimbursement of this ReimbursementObject.  # noqa: E501


        :return: The reimbursement of this ReimbursementObject.  # noqa: E501
        :rtype: Reimbursement
        """
        return self._reimbursement

    @reimbursement.setter
    def reimbursement(self, reimbursement):
        """Sets the reimbursement of this ReimbursementObject.


        :param reimbursement: The reimbursement of this ReimbursementObject.  # noqa: E501
        :type: Reimbursement
        """

        self._reimbursement = reimbursement
